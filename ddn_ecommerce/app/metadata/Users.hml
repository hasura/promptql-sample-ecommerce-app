---
kind: ObjectType
version: v1
definition:
  name: Users
  fields:
    - name: createdAt
      type: Timestamp
    - name: email
      type: Varchar!
    - name: firstName
      type: Varchar!
    - name: lastName
      type: Varchar!
    - name: password
      type: Varchar!
    - name: userId
      type: Int4!
  graphql:
    typeName: Users
    inputTypeName: UsersInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: users
      fieldMapping:
        createdAt:
          column:
            name: created_at
        email:
          column:
            name: email
        firstName:
          column:
            name: first_name
        lastName:
          column:
            name: last_name
        password:
          column:
            name: password
        userId:
          column:
            name: user_id

---
kind: TypePermissions
version: v1
definition:
  typeName: Users
  permissions:
    - role: admin
      output:
        allowedFields:
          - createdAt
          - email
          - firstName
          - lastName
          - password
          - userId

---
kind: BooleanExpressionType
version: v1
definition:
  name: UsersBoolExp
  operand:
    object:
      type: Users
      comparableFields:
        - fieldName: createdAt
          booleanExpressionType: TimestampBoolExp
        - fieldName: email
          booleanExpressionType: VarcharBoolExp
        - fieldName: firstName
          booleanExpressionType: VarcharBoolExp
        - fieldName: lastName
          booleanExpressionType: VarcharBoolExp
        - fieldName: password
          booleanExpressionType: VarcharBoolExp
        - fieldName: userId
          booleanExpressionType: Int4BoolExp
      comparableRelationships:
        - relationshipName: orders
        - relationshipName: reviews
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: UsersBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: UsersAggExp
  operand:
    object:
      aggregatedType: Users
      aggregatableFields:
        - fieldName: createdAt
          aggregateExpression: TimestampAggExp
        - fieldName: email
          aggregateExpression: VarcharAggExp
        - fieldName: firstName
          aggregateExpression: VarcharAggExp
        - fieldName: lastName
          aggregateExpression: VarcharAggExp
        - fieldName: password
          aggregateExpression: VarcharAggExp
        - fieldName: userId
          aggregateExpression: Int4AggExp
  count:
    enable: true
  graphql:
    selectTypeName: UsersAggExp

---
kind: Model
version: v1
definition:
  name: Users
  objectType: Users
  source:
    dataConnectorName: postgres
    collection: users
  filterExpressionType: UsersBoolExp
  aggregateExpression: UsersAggExp
  orderableFields:
    - fieldName: createdAt
      orderByDirections:
        enableAll: true
    - fieldName: email
      orderByDirections:
        enableAll: true
    - fieldName: firstName
      orderByDirections:
        enableAll: true
    - fieldName: lastName
      orderByDirections:
        enableAll: true
    - fieldName: password
      orderByDirections:
        enableAll: true
    - fieldName: userId
      orderByDirections:
        enableAll: true
  graphql:
    selectMany:
      queryRootField: users
    selectUniques:
      - queryRootField: usersByEmail
        uniqueIdentifier:
          - email
      - queryRootField: usersByUserId
        uniqueIdentifier:
          - userId
    orderByExpressionType: UsersOrderBy
    filterInputTypeName: UsersFilterInput
    aggregate:
      queryRootField: usersAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: Users
  permissions:
    - role: admin
      select:
        filter: null

---
kind: Relationship
version: v1
definition:
  name: orders
  sourceType: Users
  target:
    model:
      name: Orders
      relationshipType: Array
      aggregate:
        aggregateExpression: OrdersAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: userId
      target:
        modelField:
          - fieldName: userId
  graphql:
    aggregateFieldName: ordersAggregate

---
kind: Relationship
version: v1
definition:
  name: reviews
  sourceType: Users
  target:
    model:
      name: Reviews
      relationshipType: Array
      aggregate:
        aggregateExpression: ReviewsAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: userId
      target:
        modelField:
          - fieldName: userId
  graphql:
    aggregateFieldName: reviewsAggregate

